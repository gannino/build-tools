---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-job
  labels:
    k8s-job: backup

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: backup-job-exec
  namespace: default
  labels:
    k8s-job: backup
    rbac.{{ build_tools_cluster.name }}/backup-job-role: "true"
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/exec"]
    verbs: ["get", "list", "create"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backup-job
  labels:
    k8s-job: backup
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.{{ build_tools_cluster.name }}/backup-job-role: "true"
rules: []

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: backup-job
  labels:
    k8s-job: backup
subjects:
  - kind: ServiceAccount
    name: backup-job
    namespace: default
roleRef:
  kind: ClusterRole
  name: backup-job
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: gitlab-backup
  labels:
    k8s-app: gitlab
    k8s-job: backup
spec:
  concurrencyPolicy: Forbid
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            k8s-app: gitlab
            k8s-job: backup
        spec:
          containers:
            - name: gitlab-backup
              image: apextoaster/kube
              args:
                - /bin/bash
                - /scripts/gitlab-backup.sh
              volumeMounts:
                - name: cluster-scripts
                  mountPath: /scripts

          nodeSelector:
            cluster: server
          restartPolicy: OnFailure
          serviceAccountName: backup-job
          volumes:
            - name: cluster-scripts
              configMap:
                name: cluster-scripts
                defaultMode: 0755